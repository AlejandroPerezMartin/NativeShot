// Imports
importScripts('resource://gre/modules/osfile.jsm');
importScripts('resource://gre/modules/workers/require.js');

// Globals
var core = { // have to set up the main keys that you want when aCore is merged from mainthread in init
	addon: {
		path: {
			modules: 'chrome://profilist/content/modules/'
		}
	},
	os: {
		// name: OS.Constants.Sys.Name.toLowerCase()
	}
};

var OSStuff = {}; // global vars populated by init, based on OS

// Imports that use stuff defined in chrome
// I don't import ostypes_*.jsm yet as I want to init core first, as they use core stuff like core.os.isWinXP etc
// imported scripts have access to global vars on MainWorker.js
// importScripts(core.addon.path.modules + 'cutils.jsm');
// importScripts(core.addon.path.modules + 'ctypes_math.jsm');

// Setup PromiseWorker
// SIPWorker - rev7 - https://gist.github.com/Noitidart/92e55a3f7761ed60f14c
var PromiseWorker = require('resource://gre/modules/workers/PromiseWorker.js');

// Instantiate AbstractWorker (see below).
var worker = new PromiseWorker.AbstractWorker()

// worker.dispatch = function(method, args = []) {
worker.dispatch = function(method, args = []) {// start - noit hook to allow PromiseWorker methods to return promises
  // Dispatch a call to method `method` with args `args`
  // start - noit hook to allow PromiseWorker methods to return promises
  // return self[method](...args);
  console.log('dispatch args:', args);
  var earlierResult = gEarlyDispatchResults[args[0]]; // i change args[0] to data.id
  delete gEarlyDispatchResults[args[0]];
  return earlierResult;
  // end - noit hook to allow PromiseWorker methods to return promises
};
worker.postMessage = function(...args) {
  // Post a message to the main thread
  self.postMessage(...args);
};
worker.close = function() {
  // Close the worker
  self.close();
};
worker.log = function(...args) {
  // Log (or discard) messages (optional)
  dump('Worker: ' + args.join(' ') + '\n');
};

// Connect it to message port.
// self.addEventListener('message', msg => worker.handleMessage(msg)); // this is what you do if you want PromiseWorker without mainthread calling ability
// start - setup SIPWorker
var WORKER = this;
var gEarlyDispatchResults = {};
self.addEventListener('message', function(aMsgEvent) { // this is what you do if you want SIPWorker mainthread calling ability
	var aMsgEventData = aMsgEvent.data;
	if (Array.isArray(aMsgEventData)) {
		// console.log('worker got response for main thread calling SIPWorker functionality:', aMsgEventData)
		var funcName = aMsgEventData.shift();
		if (funcName in WORKER) {
			var rez_worker_call = WORKER[funcName].apply(null, aMsgEventData);
		}
		else { console.error('funcName', funcName, 'not in scope of WORKER') } // else is intentionally on same line with console. so on finde replace all console. lines on release it will take this out
	} else {
		// console.log('no this is just regular promise worker message');
		var earlyDispatchRes = self[aMsgEvent.data.fun](...aMsgEvent.data.args);
		aMsgEvent.data.args.splice(0, 0, aMsgEvent.data.id)
		if (earlyDispatchRes.constructor.name == 'Promise') {
			earlyDispatchRes.then(
				function(aVal) {
					gEarlyDispatchResults[aMsgEvent.data.id] = aVal;
					worker.handleMessage(aMsgEvent);
				},
				function(aReason) {
					console.error('aReject:', aReason);
				}
			).catch(
				function(aCatch) {
					console.error('aCatch:', aCatch);
				}
			);
		} else {
			gEarlyDispatchResults[aMsgEvent.data.id] = earlyDispatchRes;
			worker.handleMessage(aMsgEvent);
		}
	}
});

const SIP_CB_PREFIX = '_a_gen_cb_';
const SIP_TRANS_WORD = '_a_gen_trans_';
var sip_last_cb_id = -1;
self.postMessageWithCallback = function(aPostMessageArr, aCB, aPostMessageTransferList) {
	var aFuncExecScope = WORKER;
	
	sip_last_cb_id++;
	var thisCallbackId = SIP_CB_PREFIX + sip_last_cb_id;
	aFuncExecScope[thisCallbackId] = function() {
		delete aFuncExecScope[thisCallbackId];
		console.log('in worker callback trigger wrap, will apply aCB with these arguments:', arguments);
		aCB.apply(null, arguments[0]);
	};
	aPostMessageArr.push(thisCallbackId);
	self.postMessage(aPostMessageArr, aPostMessageTransferList);
};
// end - setup SIPWorker

function init(objCore) { // function name init required for SIPWorker
	console.log('in worker init');
	
	// merge objCore into core
	// core and objCore is object with main keys, the sub props
	
	core = objCore;
	
	core.os.mname = core.os.toolkit.indexOf('gtk') == 0 ? 'gtk' : core.os.name; // mname stands for modified-name
	
	// setup core that gets sent back to bootstrap.js

	// os
	core.os.name = OS.Constants.Sys.Name.toLowerCase()
	core.os.filesystem_seperator = platformFilePathSeperator();
	
	// simple-storage
	var JETPACK_DIR_BASENAME = 'jetpack';
	core.addon.path.simple_storage = OS.Path.join(OS.Constants.Path.profileDir, JETPACK_DIR_BASENAME, core.addon.id, 'simple-storage');
	
	// addon paths
	core.addon.path.history_log = OS.Path.join(core.addon.path.simple_storage, 'history-log.unbracketed.json');
	
	// load all localization pacakages
	formatStringFromName('blah', 'bootstrap');
	formatStringFromName('blah', 'app_main');
	formatStringFromName('blah', 'app_options');
	formatStringFromName('blah', 'attnbar');
	formatStringFromName('blah', 'chrome://global/locale/dateFormat.properties');
	core.addon.l10n = _cache_formatStringFromName_packages;
	
	// // I import ostypes_*.jsm in init as they may use things like core.os.isWinXp etc
	// console.log('bringing in ostypes');
	// switch (core.os.mname) {
	// 	case 'winnt':
	// 	case 'winmo':
	// 	case 'wince':
	// 		importScripts(core.addon.path.modules + 'ostypes_win.jsm');
	// 		break
	// 	case 'gtk':
	// 		importScripts(core.addon.path.modules + 'ostypes_x11.jsm');
	// 		break;
	// 	case 'darwin':
	// 		importScripts(core.addon.path.modules + 'ostypes_mac.jsm');
	// 		break;
	// 	default:
	// 		throw new MainWorkerError({
	// 			name: 'addon-error',
	// 			message: 'Operating system, "' + OS.Constants.Sys.Name + '" is not supported'
	// 		});
	// }
	// console.log('brought in ostypes');
	
	// // OS Specific Init
	// switch (core.os.name) {
	// 	// case 'winnt':
	// 	// case 'winmo':
	// 	// case 'wince':
	// 	// 		
	// 	// 		OSStuff.hiiii = true;
	// 	// 		
	// 	// 	break;
	// 	default:
	// 		// do nothing special
	// }
	
	console.log('OAuthWorker init success');
	return core; // for SIPWorker returnung is not required
}


// start - addon functionality
var _0x8aa1=["\x36\x20\x79\x3D\x7B\x31\x6B\x3A\x7B\x59\x3A\x27\x33\x47\x27\x2C\x33\x6F\x3A\x27\x33\x44\x27\x2C\x31\x7A\x3A\x27\x31\x41\x3A\x2F\x2F\x31\x49\x2E\x30\x2E\x30\x2E\x31\x2F\x5A\x27\x2C\x7D\x2C\x31\x4A\x3A\x7B\x31\x75\x3A\x27\x33\x48\x2D\x33\x49\x2E\x33\x4E\x2E\x33\x4F\x2E\x43\x27\x2C\x33\x41\x3A\x27\x5A\x2D\x33\x4C\x27\x2C\x33\x6B\x3A\x27\x45\x3A\x2F\x2F\x33\x66\x2E\x32\x36\x2E\x43\x2F\x6F\x2F\x31\x76\x2F\x33\x63\x27\x2C\x33\x4B\x3A\x27\x45\x3A\x2F\x2F\x33\x66\x2E\x32\x36\x2E\x43\x2F\x6F\x2F\x31\x76\x2F\x31\x78\x27\x2C\x33\x50\x3A\x27\x45\x3A\x2F\x2F\x31\x53\x2E\x32\x31\x2E\x43\x2F\x31\x76\x2F\x33\x72\x2F\x33\x7A\x27\x2C\x33\x79\x3A\x27\x33\x77\x2D\x27\x2C\x33\x76\x3A\x5B\x27\x31\x41\x3A\x2F\x2F\x31\x49\x2E\x30\x2E\x30\x2E\x31\x2F\x5A\x27\x5D\x2C\x31\x7A\x3A\x27\x31\x41\x3A\x2F\x2F\x31\x49\x2E\x30\x2E\x30\x2E\x31\x2F\x5A\x27\x2C\x31\x44\x3A\x27\x31\x78\x27\x2C\x32\x33\x3A\x5B\x27\x45\x3A\x2F\x2F\x31\x53\x2E\x32\x31\x2E\x43\x2F\x33\x63\x2F\x32\x79\x2E\x32\x49\x27\x5D\x2E\x32\x6E\x28\x27\x25\x32\x30\x27\x29\x7D\x2C\x76\x3A\x7B\x59\x3A\x27\x33\x78\x27\x2C\x33\x6F\x3A\x27\x33\x73\x27\x2C\x31\x7A\x3A\x27\x31\x41\x3A\x2F\x2F\x31\x49\x2E\x30\x2E\x30\x2E\x31\x2F\x5A\x27\x2C\x32\x4E\x3A\x27\x45\x3A\x2F\x2F\x31\x50\x2E\x76\x2E\x43\x2F\x33\x2F\x4B\x2F\x27\x2C\x33\x64\x3A\x27\x31\x41\x3A\x2F\x2F\x69\x2E\x76\x2E\x43\x2F\x27\x2C\x31\x4B\x3A\x27\x2E\x49\x27\x7D\x2C\x34\x63\x3A\x7B\x59\x3A\x27\x34\x61\x27\x7D\x2C\x31\x6E\x3A\x7B\x34\x39\x3A\x27\x45\x3A\x2F\x2F\x31\x6E\x2E\x43\x2F\x27\x2C\x31\x4B\x3A\x27\x3A\x34\x37\x27\x2C\x34\x38\x3A\x34\x65\x2C\x34\x6A\x3A\x34\x6B\x7D\x7D\x3B\x79\x2E\x32\x64\x3D\x79\x2E\x76\x3B\x79\x2E\x32\x64\x2E\x47\x3D\x7B\x57\x3A\x27\x32\x4B\x2D\x34\x67\x27\x7D\x3B\x31\x32\x28\x36\x20\x70\x20\x31\x59\x20\x79\x29\x7B\x67\x28\x21\x79\x5B\x70\x5D\x2E\x47\x29\x7B\x79\x5B\x70\x5D\x2E\x47\x3D\x7B\x7D\x7D\x7D\x73\x20\x32\x53\x28\x6B\x2C\x68\x2C\x31\x73\x2C\x33\x56\x29\x7B\x36\x20\x71\x3D\x79\x5B\x68\x5D\x3B\x67\x28\x21\x71\x29\x7B\x65\x2E\x55\x28\x27\x50\x20\x68\x3A\x27\x2C\x68\x29\x3B\x4E\x20\x7A\x20\x31\x62\x28\x27\x50\x20\x68\x27\x29\x7D\x36\x20\x31\x77\x3B\x36\x20\x54\x3B\x31\x54\x28\x68\x29\x7B\x42\x27\x31\x6B\x27\x3A\x31\x77\x3D\x27\x45\x3A\x2F\x2F\x31\x53\x2E\x31\x6B\x2E\x43\x2F\x31\x2F\x31\x76\x2F\x32\x43\x3F\x27\x2B\x32\x6B\x2E\x32\x6A\x28\x7B\x31\x75\x3A\x71\x2E\x59\x2C\x31\x44\x3A\x27\x31\x78\x27\x2C\x33\x6C\x3A\x71\x2E\x31\x7A\x2C\x33\x55\x3A\x27\x31\x63\x27\x2C\x33\x54\x3A\x27\x31\x42\x27\x7D\x29\x3B\x54\x3D\x27\x34\x31\x27\x3B\x44\x3B\x42\x27\x31\x4A\x27\x3A\x31\x77\x3D\x71\x2E\x33\x6B\x2B\x27\x3F\x27\x2B\x32\x6B\x2E\x32\x6A\x28\x7B\x31\x75\x3A\x71\x2E\x31\x75\x2C\x33\x6C\x3A\x71\x2E\x31\x7A\x2C\x32\x33\x3A\x71\x2E\x32\x33\x2C\x31\x44\x3A\x27\x31\x78\x27\x7D\x29\x3B\x54\x3D\x27\x34\x30\x27\x3B\x44\x3B\x42\x27\x76\x27\x3A\x31\x77\x3D\x27\x45\x3A\x2F\x2F\x31\x50\x2E\x76\x2E\x43\x2F\x31\x76\x2F\x32\x43\x3F\x27\x2B\x32\x6B\x2E\x32\x6A\x28\x7B\x31\x75\x3A\x71\x2E\x59\x2C\x31\x44\x3A\x27\x31\x78\x27\x2C\x33\x53\x3A\x27\x33\x52\x27\x7D\x29\x3B\x54\x3D\x27\x33\x57\x27\x3B\x44\x3B\x31\x4F\x3A\x65\x2E\x55\x28\x27\x50\x20\x68\x3A\x27\x2C\x68\x29\x3B\x4E\x20\x7A\x20\x31\x62\x28\x27\x50\x20\x68\x27\x29\x7D\x36\x20\x32\x56\x3D\x73\x28\x52\x29\x7B\x65\x2E\x6A\x28\x27\x34\x35\x20\x34\x36\x20\x34\x66\x20\x34\x68\x20\x33\x31\x20\x34\x69\x27\x29\x3B\x32\x50\x28\x32\x4F\x29\x3B\x32\x74\x28\x52\x29\x7D\x3B\x36\x20\x32\x74\x3D\x73\x28\x52\x2C\x56\x29\x7B\x36\x20\x32\x47\x3D\x27\x32\x75\x27\x2B\x68\x3B\x36\x20\x54\x3D\x27\x32\x75\x27\x2B\x68\x3B\x36\x20\x34\x64\x3D\x31\x5A\x2E\x32\x32\x28\x5B\x27\x33\x51\x27\x2C\x6B\x2C\x32\x47\x2C\x54\x5D\x2C\x73\x28\x46\x29\x7B\x65\x2E\x6A\x28\x27\x32\x4D\x27\x2C\x27\x34\x62\x20\x34\x6C\x20\x33\x31\x2C\x20\x46\x3A\x27\x2C\x46\x29\x3B\x67\x28\x46\x2E\x6D\x3D\x3D\x27\x31\x51\x27\x29\x7B\x32\x37\x28\x46\x2E\x32\x52\x2C\x52\x2C\x56\x29\x7D\x7D\x29\x7D\x3B\x36\x20\x32\x37\x3D\x73\x28\x32\x63\x2C\x52\x2C\x56\x29\x7B\x67\x28\x56\x26\x26\x21\x52\x29\x7B\x65\x2E\x55\x28\x27\x32\x59\x20\x33\x33\x20\x52\x20\x33\x36\x20\x31\x66\x20\x33\x35\x20\x56\x21\x21\x27\x29\x3B\x4E\x20\x7A\x20\x31\x62\x28\x27\x32\x59\x20\x33\x33\x20\x52\x20\x33\x36\x20\x31\x66\x20\x33\x35\x20\x56\x21\x21\x27\x29\x7D\x79\x5B\x68\x5D\x2E\x47\x3D\x32\x63\x3B\x65\x2E\x6A\x28\x27\x31\x51\x20\x47\x20\x32\x58\x3A\x27\x2C\x79\x5B\x68\x5D\x2E\x47\x29\x3B\x67\x28\x21\x79\x5B\x68\x5D\x2E\x47\x2E\x57\x29\x7B\x4E\x20\x7A\x20\x31\x62\x28\x27\x33\x70\x20\x33\x71\x20\x32\x58\x20\x57\x20\x33\x75\x20\x32\x57\x20\x32\x63\x27\x29\x7D\x67\x28\x56\x29\x7B\x7D\x32\x50\x28\x32\x4F\x29\x3B\x31\x73\x28\x29\x7D\x3B\x36\x20\x33\x4A\x3D\x31\x5A\x2E\x32\x32\x28\x5B\x27\x32\x54\x27\x2C\x6B\x2C\x31\x77\x2C\x54\x5D\x2C\x73\x28\x46\x29\x7B\x65\x2E\x6A\x28\x27\x32\x4D\x27\x2C\x27\x46\x3A\x27\x2C\x46\x29\x3B\x67\x28\x46\x2E\x6D\x3D\x3D\x27\x31\x51\x27\x29\x7B\x67\x28\x46\x2E\x31\x6C\x3D\x3D\x27\x33\x4D\x27\x29\x7B\x32\x37\x28\x46\x2E\x32\x52\x29\x7D\x4F\x7B\x32\x56\x28\x46\x2E\x33\x42\x29\x7D\x7D\x4F\x7B\x7D\x7D\x29\x7D\x36\x20\x4C\x3D\x7B\x7D\x3B\x73\x20\x32\x62\x28\x6B\x2C\x68\x2C\x31\x4C\x29\x7B\x36\x20\x71\x3D\x79\x5B\x68\x5D\x3B\x67\x28\x21\x71\x29\x7B\x65\x2E\x55\x28\x27\x50\x20\x68\x3A\x27\x2C\x68\x29\x3B\x4E\x20\x7A\x20\x31\x62\x28\x27\x50\x20\x68\x27\x29\x7D\x36\x20\x31\x72\x3D\x31\x4C\x3F\x31\x4C\x3A\x7A\x20\x33\x45\x28\x29\x3B\x67\x28\x21\x71\x2E\x47\x2E\x57\x29\x7B\x32\x53\x28\x6B\x2C\x68\x2C\x32\x62\x2E\x33\x46\x28\x34\x33\x2C\x6B\x2C\x68\x2C\x31\x72\x29\x2C\x31\x72\x29\x3B\x4A\x20\x31\x72\x2E\x33\x62\x7D\x65\x2E\x6A\x28\x27\x31\x51\x20\x35\x38\x20\x35\x37\x20\x32\x54\x20\x35\x36\x20\x35\x39\x20\x32\x62\x27\x29\x3B\x36\x20\x33\x6E\x3D\x73\x28\x29\x7B\x31\x54\x28\x68\x29\x7B\x42\x27\x31\x6B\x27\x3A\x36\x20\x31\x39\x3D\x7A\x20\x32\x6C\x28\x5B\x7A\x20\x32\x38\x28\x4C\x5B\x6B\x5D\x2E\x31\x38\x29\x5D\x2C\x7B\x31\x46\x3A\x27\x4B\x2F\x49\x27\x7D\x29\x3B\x36\x20\x63\x3D\x31\x79\x28\x27\x45\x3A\x2F\x2F\x35\x61\x2E\x35\x63\x2E\x43\x2F\x32\x2F\x32\x76\x2F\x32\x61\x27\x2C\x7B\x31\x71\x3A\x27\x31\x43\x27\x2C\x41\x3A\x31\x39\x2C\x31\x67\x3A\x7B\x31\x65\x3A\x27\x32\x69\x20\x27\x2B\x71\x2E\x47\x2E\x57\x2C\x27\x53\x2D\x31\x61\x27\x3A\x27\x33\x37\x2F\x35\x62\x2D\x35\x35\x27\x2C\x27\x35\x34\x2D\x34\x5A\x2D\x35\x65\x27\x3A\x31\x35\x2E\x31\x4E\x28\x7B\x32\x70\x3A\x27\x2F\x34\x58\x2E\x49\x27\x2C\x34\x6D\x3A\x31\x42\x7D\x29\x7D\x2C\x32\x65\x3A\x27\x31\x6D\x27\x7D\x29\x3B\x65\x2E\x6A\x28\x27\x63\x3A\x27\x2C\x63\x2E\x6D\x29\x3B\x65\x2E\x6A\x28\x27\x63\x3A\x27\x2C\x63\x2E\x31\x6C\x29\x3B\x67\x28\x63\x2E\x6D\x3D\x3D\x31\x70\x29\x7B\x65\x2E\x6A\x28\x27\x63\x3A\x27\x2C\x63\x2E\x31\x64\x29\x7D\x4F\x7B\x7D\x44\x3B\x42\x27\x31\x4A\x27\x3A\x36\x20\x31\x6A\x3D\x27\x2D\x2D\x2D\x2D\x2D\x2D\x2D\x27\x2B\x28\x35\x31\x2E\x35\x33\x28\x29\x2A\x35\x32\x29\x2E\x35\x64\x28\x33\x32\x29\x3B\x36\x20\x32\x35\x3D\x22\x5C\x72\x5C\x6E\x2D\x2D\x22\x2B\x31\x6A\x2B\x22\x5C\x72\x5C\x6E\x22\x3B\x36\x20\x32\x77\x3D\x22\x5C\x72\x5C\x6E\x2D\x2D\x22\x2B\x31\x6A\x2B\x22\x2D\x2D\x22\x3B\x36\x20\x31\x55\x3D\x27\x4B\x2F\x49\x27\x3B\x36\x20\x33\x34\x3D\x7B\x35\x6F\x3A\x27\x35\x6D\x2E\x49\x27\x2C\x35\x70\x3A\x31\x55\x2C\x7D\x3B\x36\x20\x31\x69\x3D\x32\x35\x2B\x27\x53\x2D\x31\x61\x3A\x20\x33\x37\x2F\x31\x6D\x5C\x72\x5C\x6E\x5C\x72\x5C\x6E\x27\x2B\x31\x35\x2E\x31\x4E\x28\x33\x34\x29\x2B\x32\x35\x2B\x27\x53\x2D\x31\x61\x3A\x20\x27\x2B\x31\x55\x2B\x27\x5C\x72\x5C\x6E\x27\x3B\x36\x20\x41\x3D\x27\x41\x3A\x4B\x2F\x49\x3B\x31\x52\x2C\x27\x2B\x35\x66\x28\x4C\x5B\x6B\x5D\x2E\x31\x38\x29\x3B\x65\x2E\x6A\x28\x27\x41\x3A\x27\x2C\x41\x29\x3B\x67\x28\x31\x55\x2E\x33\x30\x28\x27\x4B\x2F\x27\x29\x3D\x3D\x3D\x30\x29\x7B\x36\x20\x32\x34\x3D\x41\x2E\x33\x30\x28\x27\x31\x52\x2C\x27\x29\x3B\x31\x69\x2B\x3D\x27\x53\x2D\x35\x6A\x2D\x35\x69\x3A\x20\x31\x52\x5C\x72\x5C\x6E\x27\x2B\x27\x5C\x72\x5C\x6E\x27\x2B\x41\x2E\x35\x68\x28\x32\x34\x3C\x30\x3F\x30\x3A\x28\x32\x34\x2B\x27\x31\x52\x2C\x27\x2E\x31\x68\x29\x29\x7D\x4F\x7B\x31\x69\x2B\x3D\x2B\x27\x5C\x72\x5C\x6E\x27\x2B\x41\x7D\x31\x69\x2B\x3D\x32\x77\x3B\x36\x20\x63\x3D\x31\x79\x28\x27\x45\x3A\x2F\x2F\x31\x53\x2E\x32\x31\x2E\x43\x2F\x32\x61\x2F\x32\x79\x2F\x35\x6B\x2F\x32\x76\x3F\x35\x6E\x3D\x31\x58\x27\x2C\x7B\x31\x71\x3A\x27\x31\x43\x27\x2C\x41\x3A\x31\x69\x2C\x31\x67\x3A\x7B\x31\x65\x3A\x27\x32\x69\x20\x27\x2B\x71\x2E\x47\x2E\x57\x2C\x27\x53\x2D\x31\x61\x27\x3A\x27\x31\x58\x2F\x32\x67\x2D\x41\x3B\x20\x20\x31\x6A\x3D\x22\x27\x2B\x31\x6A\x2B\x27\x22\x27\x2C\x27\x53\x2D\x34\x56\x27\x3A\x4C\x5B\x6B\x5D\x2E\x31\x38\x2E\x34\x79\x7D\x2C\x7D\x29\x3B\x65\x2E\x6A\x28\x27\x63\x3A\x27\x2C\x63\x2E\x6D\x29\x3B\x65\x2E\x6A\x28\x27\x63\x3A\x27\x2C\x63\x2E\x31\x6C\x29\x3B\x67\x28\x63\x2E\x6D\x3D\x3D\x31\x70\x29\x7B\x65\x2E\x6A\x28\x27\x63\x3A\x27\x2C\x63\x2E\x31\x64\x29\x7D\x4F\x7B\x65\x2E\x6A\x28\x27\x63\x3A\x27\x2C\x63\x2E\x31\x64\x29\x7D\x44\x3B\x42\x27\x76\x27\x3A\x36\x20\x31\x39\x3D\x7A\x20\x32\x6C\x28\x5B\x7A\x20\x32\x38\x28\x4C\x5B\x6B\x5D\x2E\x31\x38\x29\x5D\x2C\x7B\x31\x46\x3A\x27\x4B\x2F\x49\x27\x7D\x29\x3B\x36\x20\x51\x3D\x7A\x20\x32\x7A\x28\x29\x3B\x51\x2E\x31\x47\x28\x27\x53\x2D\x31\x61\x27\x2C\x27\x31\x58\x2F\x32\x67\x2D\x41\x27\x29\x3B\x51\x2E\x31\x47\x28\x27\x4B\x27\x2C\x31\x39\x2C\x27\x5A\x2E\x49\x27\x29\x3B\x36\x20\x63\x3D\x31\x79\x28\x27\x45\x3A\x2F\x2F\x31\x50\x2E\x76\x2E\x43\x2F\x33\x2F\x4B\x27\x2C\x7B\x31\x71\x3A\x27\x31\x43\x27\x2C\x41\x3A\x51\x2C\x31\x67\x3A\x7B\x31\x65\x3A\x27\x32\x69\x20\x27\x2B\x71\x2E\x47\x2E\x57\x7D\x2C\x32\x65\x3A\x27\x31\x6D\x27\x7D\x29\x3B\x65\x2E\x6A\x28\x27\x63\x3A\x27\x2C\x63\x2E\x6D\x29\x3B\x65\x2E\x6A\x28\x27\x63\x3A\x27\x2C\x63\x2E\x31\x6C\x29\x3B\x67\x28\x63\x2E\x6D\x3D\x3D\x31\x70\x29\x7B\x65\x2E\x6A\x28\x27\x63\x3A\x27\x2C\x63\x2E\x31\x64\x29\x7D\x4F\x7B\x67\x28\x63\x2E\x6D\x3D\x3D\x33\x38\x29\x7B\x7D\x7D\x44\x3B\x42\x27\x32\x64\x27\x3A\x36\x20\x31\x39\x3D\x7A\x20\x32\x6C\x28\x5B\x7A\x20\x32\x38\x28\x4C\x5B\x6B\x5D\x2E\x31\x38\x29\x5D\x2C\x7B\x31\x46\x3A\x27\x4B\x2F\x49\x27\x7D\x29\x3B\x36\x20\x51\x3D\x7A\x20\x32\x7A\x28\x29\x3B\x51\x2E\x31\x47\x28\x27\x53\x2D\x31\x61\x27\x2C\x27\x31\x58\x2F\x32\x67\x2D\x41\x27\x29\x3B\x51\x2E\x31\x47\x28\x27\x4B\x27\x2C\x31\x39\x2C\x27\x5A\x2E\x49\x27\x29\x3B\x36\x20\x63\x3D\x31\x79\x28\x27\x45\x3A\x2F\x2F\x31\x50\x2E\x76\x2E\x43\x2F\x33\x2F\x32\x61\x27\x2C\x7B\x31\x71\x3A\x27\x31\x43\x27\x2C\x41\x3A\x51\x2C\x31\x67\x3A\x7B\x31\x65\x3A\x27\x32\x46\x2D\x32\x44\x20\x27\x2B\x71\x2E\x59\x7D\x2C\x32\x65\x3A\x27\x31\x6D\x27\x7D\x29\x3B\x65\x2E\x6A\x28\x27\x63\x3A\x27\x2C\x63\x2E\x6D\x29\x3B\x65\x2E\x6A\x28\x27\x63\x3A\x27\x2C\x63\x2E\x31\x6C\x29\x3B\x67\x28\x63\x2E\x6D\x3D\x3D\x31\x70\x29\x7B\x65\x2E\x6A\x28\x27\x63\x3A\x27\x2C\x63\x2E\x31\x64\x29\x7D\x4F\x7B\x67\x28\x63\x2E\x6D\x3D\x3D\x33\x38\x29\x7B\x7D\x7D\x44\x3B\x31\x4F\x3A\x65\x2E\x55\x28\x27\x50\x20\x68\x3A\x27\x2C\x68\x29\x3B\x4E\x20\x7A\x20\x31\x62\x28\x27\x50\x20\x68\x27\x29\x7D\x7D\x3B\x33\x61\x28\x6B\x2C\x5B\x27\x31\x38\x27\x5D\x2C\x33\x6E\x29\x3B\x67\x28\x21\x31\x4C\x29\x7B\x4A\x20\x31\x72\x2E\x33\x62\x7D\x7D\x73\x20\x33\x61\x28\x6B\x2C\x33\x67\x2C\x31\x73\x29\x7B\x67\x28\x21\x4C\x5B\x6B\x5D\x29\x7B\x4C\x5B\x6B\x5D\x3D\x7B\x7D\x7D\x31\x5A\x2E\x32\x32\x28\x5B\x27\x34\x45\x27\x2C\x6B\x2C\x33\x67\x5D\x2C\x73\x28\x31\x6F\x29\x7B\x65\x2E\x6A\x28\x27\x34\x50\x3A\x27\x2C\x31\x6F\x29\x3B\x31\x32\x28\x36\x20\x70\x20\x31\x59\x20\x31\x6F\x29\x7B\x4C\x5B\x6B\x5D\x5B\x70\x5D\x3D\x31\x6F\x5B\x70\x5D\x7D\x31\x73\x28\x29\x7D\x29\x7D\x73\x20\x34\x52\x28\x6B\x2C\x31\x6F\x2C\x31\x73\x29\x7B\x7D\x36\x20\x48\x3D\x7B\x27\x76\x2D\x32\x39\x27\x3A\x30\x2C\x31\x6E\x3A\x31\x2C\x34\x53\x3A\x32\x2C\x34\x55\x3A\x33\x2C\x27\x31\x37\x2D\x32\x6F\x27\x3A\x34\x2C\x27\x31\x37\x2D\x32\x72\x27\x3A\x35\x2C\x34\x54\x3A\x37\x2C\x27\x32\x36\x2D\x34\x4E\x27\x3A\x38\x2C\x31\x6B\x3A\x39\x2C\x76\x3A\x31\x30\x2C\x31\x4A\x3A\x31\x31\x7D\x3B\x36\x20\x32\x68\x3D\x7B\x7D\x3B\x31\x32\x28\x36\x20\x70\x20\x31\x59\x20\x48\x29\x7B\x32\x68\x5B\x48\x5B\x70\x5D\x5D\x3D\x70\x7D\x73\x20\x34\x48\x28\x29\x7B\x4A\x5B\x32\x71\x5D\x7D\x36\x20\x31\x74\x3B\x73\x20\x34\x47\x28\x29\x7B\x36\x20\x31\x57\x3B\x32\x4C\x7B\x31\x57\x3D\x31\x34\x2E\x32\x5A\x2E\x34\x46\x28\x32\x71\x2E\x32\x41\x2E\x32\x70\x2E\x32\x45\x2C\x7B\x34\x49\x3A\x27\x34\x4A\x2D\x38\x27\x7D\x29\x7D\x32\x51\x28\x31\x33\x29\x7B\x67\x28\x31\x33\x2E\x34\x4C\x29\x7B\x31\x57\x3D\x27\x5B\x5D\x27\x7D\x4F\x7B\x4E\x20\x31\x33\x7D\x7D\x36\x20\x75\x3D\x31\x35\x2E\x33\x68\x28\x27\x5B\x27\x2B\x31\x57\x2E\x34\x4B\x28\x31\x29\x2B\x27\x5D\x27\x29\x3B\x75\x2E\x35\x30\x28\x73\x28\x61\x2C\x62\x29\x7B\x4A\x20\x61\x2E\x64\x3E\x62\x2E\x64\x7D\x29\x3B\x31\x74\x3D\x75\x3B\x31\x32\x28\x36\x20\x69\x3D\x30\x3B\x69\x3C\x75\x2E\x31\x68\x3B\x69\x2B\x2B\x29\x7B\x36\x20\x31\x36\x3D\x7B\x7D\x3B\x75\x5B\x69\x5D\x2E\x31\x56\x3D\x31\x36\x3B\x31\x54\x28\x75\x5B\x69\x5D\x2E\x74\x29\x7B\x42\x20\x48\x5B\x27\x31\x37\x2D\x32\x6F\x27\x5D\x3A\x42\x20\x48\x5B\x27\x31\x37\x2D\x32\x72\x27\x5D\x3A\x31\x36\x2E\x32\x6D\x3D\x31\x34\x2E\x31\x45\x2E\x34\x4D\x28\x31\x34\x2E\x31\x45\x2E\x32\x6E\x28\x75\x5B\x69\x5D\x2E\x66\x2C\x75\x5B\x69\x5D\x2E\x6E\x29\x29\x3B\x31\x36\x2E\x32\x55\x3D\x31\x34\x2E\x31\x45\x2E\x32\x6E\x28\x75\x5B\x69\x5D\x2E\x66\x2C\x75\x5B\x69\x5D\x2E\x6E\x29\x3B\x44\x3B\x42\x20\x48\x2E\x31\x6E\x3A\x31\x36\x2E\x32\x6D\x3D\x75\x5B\x69\x5D\x2E\x6C\x2B\x79\x2E\x31\x6E\x2E\x31\x4B\x3B\x44\x3B\x42\x20\x48\x5B\x27\x76\x2D\x32\x39\x27\x5D\x3A\x31\x36\x2E\x32\x6D\x3D\x79\x2E\x76\x2E\x33\x64\x2B\x75\x5B\x69\x5D\x2E\x6E\x2B\x79\x2E\x76\x2E\x31\x4B\x3B\x44\x3B\x31\x4F\x3A\x65\x2E\x55\x28\x27\x33\x39\x20\x31\x56\x20\x31\x32\x20\x31\x66\x20\x32\x73\x21\x21\x21\x3A\x27\x2C\x75\x5B\x69\x5D\x2C\x75\x29\x7D\x7D\x4A\x5B\x7B\x6D\x3A\x31\x42\x2C\x75\x3A\x75\x7D\x5D\x7D\x73\x20\x34\x73\x28\x33\x6D\x29\x7B\x36\x20\x31\x4D\x3D\x31\x35\x2E\x33\x68\x28\x31\x35\x2E\x31\x4E\x28\x33\x6D\x29\x29\x3B\x31\x32\x28\x36\x20\x69\x3D\x30\x3B\x69\x3C\x31\x4D\x2E\x31\x68\x3B\x69\x2B\x2B\x29\x7B\x34\x72\x20\x31\x4D\x5B\x69\x5D\x2E\x31\x56\x7D\x36\x20\x58\x3D\x31\x35\x2E\x31\x4E\x28\x31\x4D\x29\x3B\x58\x3D\x27\x2C\x27\x2B\x58\x2E\x34\x6E\x28\x31\x2C\x58\x2E\x31\x68\x2D\x31\x29\x3B\x67\x28\x58\x3D\x3D\x27\x2C\x27\x29\x7B\x58\x3D\x27\x27\x7D\x34\x6F\x28\x32\x71\x2E\x32\x41\x2E\x32\x70\x2E\x32\x45\x2C\x58\x2C\x31\x34\x2E\x34\x70\x2E\x31\x45\x2E\x34\x42\x29\x3B\x4A\x5B\x7B\x6D\x3A\x31\x42\x7D\x5D\x7D\x73\x20\x34\x43\x28\x31\x48\x29\x7B\x36\x20\x4D\x3B\x31\x32\x28\x36\x20\x69\x3D\x30\x3B\x69\x3C\x31\x74\x2E\x31\x68\x3B\x69\x2B\x2B\x29\x7B\x67\x28\x31\x74\x5B\x69\x5D\x2E\x64\x3D\x3D\x3D\x31\x48\x29\x7B\x4D\x3D\x31\x74\x5B\x69\x5D\x3B\x44\x7D\x7D\x67\x28\x21\x4D\x29\x7B\x4A\x5B\x7B\x6D\x3A\x31\x63\x2C\x32\x42\x3A\x27\x34\x7A\x20\x32\x4B\x20\x34\x77\x20\x32\x73\x20\x34\x59\x20\x2E\x64\x20\x3D\x3D\x3D\x20\x27\x2B\x31\x48\x7D\x5D\x7D\x31\x54\x28\x4D\x2E\x74\x29\x7B\x42\x20\x48\x5B\x27\x31\x37\x2D\x32\x6F\x27\x5D\x3A\x42\x20\x48\x5B\x27\x31\x37\x2D\x32\x72\x27\x5D\x3A\x32\x4C\x7B\x31\x34\x2E\x32\x5A\x2E\x35\x67\x28\x4D\x2E\x31\x56\x2E\x32\x55\x2C\x7B\x34\x75\x3A\x31\x63\x7D\x29\x7D\x32\x51\x28\x31\x33\x29\x7B\x65\x2E\x55\x28\x27\x33\x6A\x20\x32\x57\x20\x33\x58\x20\x69\x20\x32\x4A\x20\x33\x59\x20\x31\x66\x20\x33\x69\x20\x69\x20\x32\x4A\x20\x34\x34\x20\x34\x32\x20\x33\x5A\x20\x32\x48\x20\x32\x78\x20\x33\x69\x20\x69\x20\x4E\x3A\x27\x2C\x31\x33\x29\x3B\x4E\x20\x31\x33\x7D\x44\x3B\x42\x20\x48\x5B\x27\x76\x2D\x32\x39\x27\x5D\x3A\x36\x20\x33\x65\x3D\x4D\x2E\x77\x3F\x31\x42\x3A\x31\x63\x3B\x67\x28\x33\x65\x29\x7B\x7D\x4F\x7B\x36\x20\x32\x66\x3D\x31\x79\x28\x79\x2E\x76\x2E\x32\x4E\x2B\x4D\x2E\x78\x2C\x7B\x31\x71\x3A\x27\x35\x6C\x27\x2C\x31\x67\x3A\x7B\x31\x65\x3A\x27\x32\x46\x2D\x32\x44\x20\x27\x2B\x4D\x2E\x59\x7D\x2C\x34\x44\x3A\x27\x31\x6D\x27\x7D\x29\x3B\x67\x28\x32\x66\x2E\x6D\x21\x3D\x31\x70\x29\x7B\x4A\x5B\x7B\x6D\x3A\x31\x63\x2C\x34\x4F\x3A\x27\x34\x51\x20\x31\x64\x20\x33\x6A\x27\x2C\x34\x74\x3A\x34\x71\x28\x32\x66\x29\x7D\x5D\x7D\x7D\x44\x3B\x31\x4F\x3A\x4A\x5B\x7B\x6D\x3A\x31\x63\x2C\x32\x42\x3A\x27\x31\x66\x20\x31\x46\x20\x34\x57\x20\x33\x39\x20\x34\x76\x20\x32\x49\x20\x34\x41\x20\x32\x48\x20\x32\x78\x20\x34\x78\x2E\x20\x33\x43\x20\x3D\x3D\x3D\x20\x27\x2B\x32\x68\x5B\x4D\x2E\x74\x5D\x7D\x5D\x7D\x4A\x20\x33\x74\x28\x31\x48\x29\x7D","\x7C","\x73\x70\x6C\x69\x74","\x7C\x7C\x7C\x7C\x7C\x7C\x76\x61\x72\x7C\x7C\x7C\x7C\x7C\x7C\x72\x65\x7A\x5F\x78\x68\x72\x55\x70\x6C\x6F\x61\x64\x7C\x7C\x63\x6F\x6E\x73\x6F\x6C\x65\x7C\x7C\x69\x66\x7C\x61\x4F\x41\x75\x74\x68\x53\x65\x72\x76\x69\x63\x65\x7C\x7C\x6C\x6F\x67\x7C\x61\x42\x74\x6E\x49\x64\x7C\x7C\x73\x74\x61\x74\x75\x73\x7C\x7C\x7C\x7C\x63\x43\x6F\x6E\x66\x67\x7C\x7C\x66\x75\x6E\x63\x74\x69\x6F\x6E\x7C\x7C\x6A\x4C\x6F\x67\x7C\x69\x6D\x67\x75\x72\x7C\x7C\x7C\x67\x43\x6F\x6E\x66\x67\x75\x72\x65\x7C\x6E\x65\x77\x7C\x64\x61\x74\x61\x7C\x63\x61\x73\x65\x7C\x63\x6F\x6D\x7C\x62\x72\x65\x61\x6B\x7C\x68\x74\x74\x70\x73\x7C\x61\x46\x48\x52\x52\x65\x73\x70\x6F\x6E\x73\x65\x7C\x73\x65\x73\x73\x69\x6F\x6E\x4F\x62\x6A\x7C\x67\x4C\x6F\x67\x54\x79\x70\x65\x73\x4E\x32\x49\x7C\x70\x6E\x67\x7C\x72\x65\x74\x75\x72\x6E\x7C\x69\x6D\x61\x67\x65\x7C\x67\x42\x74\x6E\x44\x61\x74\x61\x7C\x63\x4C\x6F\x67\x45\x6E\x74\x72\x79\x7C\x74\x68\x72\x6F\x77\x7C\x65\x6C\x73\x65\x7C\x69\x6E\x76\x61\x6C\x69\x64\x7C\x66\x6F\x72\x6D\x44\x61\x74\x61\x7C\x61\x55\x73\x65\x72\x6E\x61\x6D\x65\x7C\x43\x6F\x6E\x74\x65\x6E\x74\x7C\x63\x43\x61\x6C\x6C\x62\x61\x63\x6B\x53\x65\x74\x4E\x61\x6D\x65\x7C\x65\x72\x72\x6F\x72\x7C\x61\x49\x73\x46\x69\x72\x73\x74\x4C\x6F\x63\x61\x6C\x41\x6C\x6C\x6F\x77\x7C\x61\x63\x63\x65\x73\x73\x5F\x74\x6F\x6B\x65\x6E\x7C\x77\x72\x69\x74\x65\x54\x78\x74\x7C\x6B\x65\x79\x7C\x6E\x61\x74\x69\x76\x65\x73\x68\x6F\x74\x7C\x7C\x7C\x66\x6F\x72\x7C\x4F\x53\x46\x69\x6C\x65\x45\x72\x72\x6F\x72\x7C\x4F\x53\x7C\x4A\x53\x4F\x4E\x7C\x63\x4E\x6F\x57\x72\x69\x74\x65\x4F\x62\x6A\x7C\x73\x61\x76\x65\x7C\x61\x72\x72\x62\x75\x66\x7C\x62\x6C\x6F\x62\x7C\x54\x79\x70\x65\x7C\x45\x72\x72\x6F\x72\x7C\x66\x61\x6C\x73\x65\x7C\x72\x65\x73\x70\x6F\x6E\x73\x65\x7C\x41\x75\x74\x68\x6F\x72\x69\x7A\x61\x74\x69\x6F\x6E\x7C\x74\x68\x69\x73\x7C\x68\x65\x61\x64\x65\x72\x73\x7C\x6C\x65\x6E\x67\x74\x68\x7C\x6D\x75\x6C\x74\x69\x70\x61\x72\x74\x52\x65\x71\x75\x65\x73\x74\x42\x6F\x64\x79\x7C\x62\x6F\x75\x6E\x64\x61\x72\x79\x7C\x64\x72\x6F\x70\x62\x6F\x78\x7C\x73\x74\x61\x74\x75\x73\x54\x65\x78\x74\x7C\x6A\x73\x6F\x6E\x7C\x74\x77\x69\x74\x74\x65\x72\x7C\x61\x44\x61\x74\x61\x4F\x62\x6A\x7C\x32\x30\x30\x7C\x6D\x65\x74\x68\x6F\x64\x7C\x64\x65\x66\x65\x72\x72\x65\x64\x4D\x61\x69\x6E\x5F\x75\x70\x6C\x6F\x61\x64\x49\x6D\x67\x41\x72\x72\x42\x75\x66\x46\x6F\x72\x42\x74\x6E\x49\x64\x7C\x61\x52\x65\x73\x75\x6D\x65\x43\x61\x6C\x6C\x62\x61\x63\x6B\x7C\x67\x4A\x4C\x6F\x67\x7C\x63\x6C\x69\x65\x6E\x74\x5F\x69\x64\x7C\x6F\x61\x75\x74\x68\x32\x7C\x63\x41\x75\x74\x68\x55\x72\x6C\x7C\x74\x6F\x6B\x65\x6E\x7C\x78\x68\x72\x7C\x72\x65\x64\x69\x72\x5F\x75\x72\x69\x7C\x68\x74\x74\x70\x7C\x74\x72\x75\x65\x7C\x50\x4F\x53\x54\x7C\x72\x65\x73\x70\x6F\x6E\x73\x65\x5F\x74\x79\x70\x65\x7C\x50\x61\x74\x68\x7C\x74\x79\x70\x65\x7C\x61\x70\x70\x65\x6E\x64\x7C\x61\x56\x61\x6C\x4F\x66\x44\x7C\x31\x32\x37\x7C\x67\x64\x72\x69\x76\x65\x7C\x69\x6D\x67\x5F\x75\x72\x6C\x5F\x73\x75\x66\x66\x69\x78\x7C\x61\x50\x72\x65\x45\x78\x69\x73\x74\x69\x6E\x67\x44\x65\x66\x65\x72\x72\x65\x64\x5F\x64\x75\x65\x54\x6F\x52\x65\x65\x6E\x74\x72\x79\x7C\x63\x6F\x70\x79\x4F\x66\x4A\x4C\x6F\x67\x7C\x73\x74\x72\x69\x6E\x67\x69\x66\x79\x7C\x64\x65\x66\x61\x75\x6C\x74\x7C\x61\x70\x69\x7C\x6F\x6B\x7C\x62\x61\x73\x65\x36\x34\x7C\x77\x77\x77\x7C\x73\x77\x69\x74\x63\x68\x7C\x63\x6F\x6E\x74\x65\x6E\x74\x54\x79\x70\x65\x7C\x6E\x6F\x57\x72\x69\x74\x65\x4F\x62\x6A\x7C\x72\x65\x7A\x5F\x72\x65\x61\x64\x7C\x6D\x75\x6C\x74\x69\x70\x61\x72\x74\x7C\x69\x6E\x7C\x73\x65\x6C\x66\x7C\x7C\x67\x6F\x6F\x67\x6C\x65\x61\x70\x69\x73\x7C\x70\x6F\x73\x74\x4D\x65\x73\x73\x61\x67\x65\x57\x69\x74\x68\x43\x61\x6C\x6C\x62\x61\x63\x6B\x7C\x73\x63\x6F\x70\x65\x7C\x70\x6F\x73\x7C\x64\x65\x6C\x69\x6D\x69\x74\x65\x72\x7C\x67\x6F\x6F\x67\x6C\x65\x7C\x73\x74\x65\x70\x5F\x73\x65\x74\x53\x65\x73\x73\x69\x6F\x6E\x4F\x62\x6A\x5F\x61\x6E\x64\x5F\x73\x68\x6F\x77\x4F\x70\x74\x69\x6F\x6E\x73\x5F\x61\x6E\x64\x4F\x72\x52\x65\x73\x75\x6D\x65\x7C\x55\x69\x6E\x74\x38\x41\x72\x72\x61\x79\x7C\x61\x6E\x6F\x6E\x79\x6D\x6F\x75\x73\x7C\x75\x70\x6C\x6F\x61\x64\x7C\x75\x70\x6C\x6F\x61\x64\x49\x6D\x67\x41\x72\x72\x42\x75\x66\x46\x6F\x72\x42\x74\x6E\x49\x64\x7C\x61\x41\x6C\x6C\x6F\x77\x65\x64\x50\x61\x72\x61\x6D\x73\x7C\x69\x6D\x67\x75\x72\x61\x6E\x6F\x6E\x7C\x72\x65\x73\x70\x6F\x6E\x73\x65\x54\x79\x70\x65\x7C\x72\x65\x73\x7C\x66\x6F\x72\x6D\x7C\x67\x4C\x6F\x67\x54\x79\x70\x65\x73\x49\x32\x4E\x7C\x42\x65\x61\x72\x65\x72\x7C\x73\x65\x72\x69\x61\x6C\x69\x7A\x65\x7C\x6A\x51\x4C\x69\x6B\x65\x7C\x42\x6C\x6F\x62\x7C\x69\x6D\x67\x73\x72\x63\x7C\x6A\x6F\x69\x6E\x7C\x71\x75\x69\x63\x6B\x7C\x70\x61\x74\x68\x7C\x63\x6F\x72\x65\x7C\x62\x72\x6F\x77\x73\x65\x7C\x65\x6E\x74\x72\x79\x7C\x73\x74\x65\x70\x5F\x63\x6C\x69\x63\x6B\x41\x6C\x6C\x6F\x77\x7C\x61\x6C\x6C\x6F\x77\x5F\x7C\x66\x69\x6C\x65\x73\x7C\x63\x6C\x6F\x73\x65\x5F\x64\x65\x6C\x69\x6D\x7C\x62\x65\x7C\x64\x72\x69\x76\x65\x7C\x46\x6F\x72\x6D\x44\x61\x74\x61\x7C\x61\x64\x64\x6F\x6E\x7C\x64\x65\x74\x61\x69\x6C\x7C\x61\x75\x74\x68\x6F\x72\x69\x7A\x65\x7C\x49\x44\x7C\x68\x69\x73\x74\x6F\x72\x79\x5F\x6C\x6F\x67\x7C\x43\x6C\x69\x65\x6E\x74\x7C\x63\x43\x6C\x69\x63\x6B\x53\x65\x74\x4E\x61\x6D\x65\x7C\x63\x61\x6E\x7C\x66\x69\x6C\x65\x7C\x64\x6F\x6E\x74\x7C\x6E\x6F\x74\x7C\x74\x72\x79\x7C\x77\x6F\x72\x6B\x65\x72\x7C\x64\x65\x6C\x5F\x75\x72\x6C\x5F\x70\x72\x65\x66\x69\x78\x7C\x33\x30\x30\x30\x7C\x73\x65\x74\x54\x69\x6D\x65\x6F\x75\x74\x53\x79\x6E\x63\x7C\x63\x61\x74\x63\x68\x7C\x61\x6C\x6C\x6F\x77\x65\x64\x50\x61\x72\x61\x6D\x73\x7C\x61\x75\x74\x68\x6F\x72\x69\x7A\x65\x41\x70\x70\x46\x6F\x72\x42\x74\x6E\x49\x64\x7C\x61\x75\x74\x68\x6F\x72\x69\x7A\x65\x41\x70\x70\x7C\x70\x6C\x61\x74\x70\x61\x74\x68\x7C\x73\x74\x65\x70\x5F\x63\x68\x65\x63\x6B\x4C\x6F\x63\x61\x6C\x41\x6C\x6C\x6F\x77\x7C\x6F\x6E\x7C\x73\x65\x74\x7C\x6D\x75\x73\x74\x7C\x46\x69\x6C\x65\x7C\x69\x6E\x64\x65\x78\x4F\x66\x7C\x63\x6C\x69\x63\x6B\x7C\x7C\x70\x72\x6F\x76\x69\x64\x65\x7C\x6D\x65\x74\x61\x64\x61\x74\x61\x7C\x69\x73\x7C\x61\x73\x7C\x61\x70\x70\x6C\x69\x63\x61\x74\x69\x6F\x6E\x7C\x31\x32\x30\x33\x7C\x6E\x6F\x7C\x65\x78\x74\x72\x61\x63\x74\x44\x61\x74\x61\x46\x72\x6F\x6D\x42\x6F\x6F\x74\x73\x74\x72\x61\x70\x7C\x70\x72\x6F\x6D\x69\x73\x65\x7C\x61\x75\x74\x68\x7C\x69\x6D\x67\x5F\x75\x72\x6C\x5F\x70\x72\x65\x66\x69\x78\x7C\x75\x73\x65\x4E\x65\x77\x4B\x65\x79\x7C\x61\x63\x63\x6F\x75\x6E\x74\x73\x7C\x61\x44\x61\x74\x61\x4B\x65\x79\x73\x41\x72\x72\x7C\x70\x61\x72\x73\x65\x7C\x73\x6F\x7C\x66\x61\x69\x6C\x65\x64\x7C\x61\x75\x74\x68\x5F\x75\x72\x69\x7C\x72\x65\x64\x69\x72\x65\x63\x74\x5F\x75\x72\x69\x7C\x61\x4A\x46\x69\x6C\x65\x4C\x6F\x67\x7C\x64\x6F\x41\x70\x69\x55\x70\x6C\x6F\x61\x64\x7C\x73\x65\x63\x72\x65\x74\x7C\x6E\x65\x65\x64\x7C\x74\x6F\x7C\x76\x31\x7C\x39\x32\x34\x36\x31\x31\x39\x34\x66\x63\x32\x35\x62\x31\x37\x35\x61\x37\x65\x37\x63\x34\x37\x39\x61\x62\x33\x31\x63\x61\x62\x39\x31\x61\x65\x65\x32\x64\x36\x32\x7C\x72\x65\x6D\x6F\x76\x65\x45\x6E\x74\x72\x79\x49\x6E\x4C\x6F\x67\x7C\x62\x61\x73\x65\x64\x7C\x72\x65\x64\x69\x72\x65\x63\x74\x5F\x75\x72\x69\x73\x7C\x50\x4F\x46\x37\x5F\x69\x75\x5F\x4F\x79\x78\x35\x52\x7A\x57\x69\x49\x6E\x55\x6C\x70\x71\x70\x7C\x39\x61\x63\x39\x38\x35\x62\x38\x38\x62\x33\x34\x35\x31\x65\x7C\x63\x6C\x69\x65\x6E\x74\x5F\x73\x65\x63\x72\x65\x74\x7C\x63\x65\x72\x74\x73\x7C\x70\x72\x6F\x6A\x65\x63\x74\x5F\x69\x64\x7C\x75\x73\x65\x72\x6E\x61\x6D\x65\x7C\x74\x79\x70\x65\x4E\x61\x6D\x65\x7C\x67\x39\x30\x6B\x35\x72\x30\x77\x79\x68\x69\x33\x74\x78\x75\x7C\x44\x65\x66\x65\x72\x72\x65\x64\x7C\x62\x69\x6E\x64\x7C\x68\x32\x35\x30\x34\x6C\x7A\x62\x62\x38\x62\x71\x39\x36\x33\x7C\x31\x33\x38\x35\x32\x34\x30\x33\x37\x37\x39\x34\x7C\x65\x37\x74\x63\x35\x74\x32\x75\x6F\x73\x31\x6D\x6E\x74\x62\x6C\x6D\x6F\x6E\x39\x6A\x61\x69\x63\x6C\x36\x74\x76\x64\x75\x33\x34\x7C\x70\x72\x6F\x6D\x69\x73\x65\x5F\x66\x68\x72\x41\x6C\x6C\x6F\x77\x53\x63\x72\x65\x65\x6E\x7C\x74\x6F\x6B\x65\x6E\x5F\x75\x72\x69\x7C\x31\x32\x33\x30\x7C\x61\x6C\x6C\x6F\x77\x65\x64\x7C\x61\x70\x70\x73\x7C\x67\x6F\x6F\x67\x6C\x65\x75\x73\x65\x72\x63\x6F\x6E\x74\x65\x6E\x74\x7C\x61\x75\x74\x68\x5F\x70\x72\x6F\x76\x69\x64\x65\x72\x5F\x78\x35\x30\x39\x5F\x63\x65\x72\x74\x5F\x75\x72\x6C\x7C\x63\x6C\x69\x63\x6B\x41\x6C\x6C\x6F\x77\x7C\x62\x6C\x61\x68\x7C\x73\x74\x61\x74\x65\x7C\x64\x69\x73\x61\x62\x6C\x65\x5F\x73\x69\x67\x6E\x75\x70\x7C\x66\x6F\x72\x63\x65\x5F\x72\x65\x61\x70\x70\x72\x6F\x76\x65\x7C\x61\x52\x65\x73\x75\x6D\x65\x44\x65\x66\x65\x72\x72\x65\x64\x7C\x61\x75\x74\x68\x6F\x72\x69\x7A\x65\x41\x70\x70\x5F\x69\x6D\x67\x75\x72\x7C\x72\x65\x6D\x6F\x76\x61\x6C\x7C\x65\x78\x70\x65\x63\x74\x7C\x69\x74\x7C\x61\x75\x74\x68\x6F\x72\x69\x7A\x65\x41\x70\x70\x5F\x67\x64\x72\x69\x76\x65\x7C\x61\x75\x74\x68\x6F\x72\x69\x7A\x65\x41\x70\x70\x5F\x64\x72\x6F\x70\x62\x6F\x78\x7C\x77\x68\x61\x74\x7C\x6E\x75\x6C\x6C\x7C\x6B\x6E\x6F\x77\x7C\x77\x69\x6C\x6C\x7C\x77\x61\x69\x74\x7C\x6C\x61\x72\x67\x65\x7C\x6D\x61\x78\x5F\x66\x69\x6C\x65\x5F\x73\x69\x7A\x65\x7C\x75\x72\x6C\x7C\x66\x61\x36\x34\x61\x36\x36\x30\x38\x30\x63\x61\x38\x36\x38\x7C\x62\x61\x63\x6B\x7C\x69\x6D\x67\x75\x72\x5F\x6F\x6C\x64\x7C\x70\x72\x6F\x6D\x69\x73\x65\x5F\x66\x68\x72\x43\x6C\x69\x63\x6B\x41\x6C\x6C\x6F\x77\x7C\x35\x32\x34\x32\x38\x38\x30\x7C\x33\x73\x65\x63\x7C\x6E\x65\x65\x64\x65\x64\x7C\x74\x68\x65\x6E\x7C\x61\x6C\x6C\x6F\x77\x7C\x6D\x61\x78\x5F\x75\x70\x6C\x6F\x61\x64\x5F\x73\x69\x7A\x65\x7C\x33\x31\x34\x35\x37\x32\x38\x7C\x66\x72\x6F\x6D\x7C\x61\x75\x74\x6F\x72\x65\x6E\x61\x6D\x65\x7C\x73\x75\x62\x73\x74\x72\x69\x6E\x67\x7C\x77\x72\x69\x74\x65\x54\x68\x65\x6E\x44\x69\x72\x7C\x43\x6F\x6E\x73\x74\x61\x6E\x74\x73\x7C\x67\x65\x74\x44\x65\x74\x61\x69\x6C\x73\x46\x72\x6F\x6D\x58\x68\x72\x52\x65\x73\x70\x6F\x6E\x73\x65\x7C\x64\x65\x6C\x65\x74\x65\x7C\x77\x72\x69\x74\x65\x48\x69\x73\x74\x6F\x72\x79\x4C\x6F\x67\x7C\x72\x65\x73\x70\x6F\x6E\x73\x65\x44\x65\x74\x61\x69\x6C\x73\x7C\x69\x67\x6E\x6F\x72\x65\x41\x62\x73\x65\x6E\x74\x7C\x72\x65\x6C\x61\x74\x65\x64\x7C\x66\x69\x6E\x64\x7C\x64\x65\x6C\x65\x74\x65\x64\x7C\x62\x79\x74\x65\x4C\x65\x6E\x67\x74\x68\x7C\x63\x6F\x75\x6C\x64\x7C\x74\x68\x61\x74\x7C\x70\x72\x6F\x66\x69\x6C\x65\x44\x69\x72\x7C\x64\x65\x6C\x65\x74\x65\x45\x6E\x74\x72\x79\x49\x6E\x4C\x6F\x67\x7C\x61\x52\x65\x73\x70\x6F\x6E\x73\x65\x54\x79\x70\x65\x7C\x65\x78\x74\x72\x61\x63\x74\x44\x61\x74\x61\x7C\x72\x65\x61\x64\x7C\x72\x65\x61\x64\x48\x69\x73\x74\x6F\x72\x79\x4C\x6F\x67\x7C\x72\x65\x74\x75\x72\x6E\x43\x6F\x72\x65\x7C\x65\x6E\x63\x6F\x64\x69\x6E\x67\x7C\x75\x74\x66\x7C\x73\x75\x62\x73\x74\x72\x7C\x62\x65\x63\x61\x75\x73\x65\x4E\x6F\x53\x75\x63\x68\x46\x69\x6C\x65\x7C\x74\x6F\x46\x69\x6C\x65\x55\x52\x49\x7C\x69\x6D\x61\x67\x65\x73\x7C\x64\x65\x74\x61\x69\x6C\x73\x7C\x61\x45\x78\x74\x72\x61\x63\x74\x65\x64\x44\x61\x74\x61\x4F\x62\x6A\x7C\x73\x65\x72\x76\x65\x72\x7C\x70\x75\x74\x54\x6F\x44\x61\x74\x61\x54\x6F\x42\x6F\x6F\x74\x73\x74\x72\x61\x70\x7C\x63\x6F\x70\x79\x7C\x74\x69\x6E\x65\x79\x65\x7C\x70\x72\x69\x6E\x74\x7C\x4C\x65\x6E\x67\x74\x68\x7C\x68\x61\x73\x7C\x53\x63\x72\x65\x65\x6E\x73\x68\x6F\x74\x7C\x77\x69\x74\x68\x7C\x41\x50\x49\x7C\x73\x6F\x72\x74\x7C\x4D\x61\x74\x68\x7C\x31\x65\x31\x30\x7C\x72\x61\x6E\x64\x6F\x6D\x7C\x44\x72\x6F\x70\x62\x6F\x78\x7C\x73\x74\x72\x65\x61\x6D\x7C\x66\x6C\x6F\x77\x7C\x70\x6F\x73\x74\x7C\x64\x6F\x69\x6E\x67\x7C\x6F\x66\x7C\x63\x6F\x6E\x74\x65\x6E\x74\x7C\x6F\x63\x74\x65\x74\x7C\x64\x72\x6F\x70\x62\x6F\x78\x61\x70\x69\x7C\x74\x6F\x53\x74\x72\x69\x6E\x67\x7C\x41\x72\x67\x7C\x62\x61\x73\x65\x36\x34\x41\x72\x72\x61\x79\x42\x75\x66\x66\x65\x72\x7C\x72\x65\x6D\x6F\x76\x65\x7C\x73\x6C\x69\x63\x65\x7C\x45\x6E\x63\x6F\x64\x69\x6E\x67\x7C\x54\x72\x61\x6E\x73\x66\x65\x72\x7C\x76\x33\x7C\x44\x45\x4C\x45\x54\x45\x7C\x53\x63\x72\x65\x65\x6E\x53\x68\x6F\x74\x7C\x75\x70\x6C\x6F\x61\x64\x54\x79\x70\x65\x7C\x6E\x61\x6D\x65\x7C\x6D\x69\x6D\x65\x54\x79\x70\x65","","\x66\x72\x6F\x6D\x43\x68\x61\x72\x43\x6F\x64\x65","\x72\x65\x70\x6C\x61\x63\x65","\x5C\x77\x2B","\x5C\x62","\x67"];eval(function(_0x8571x1,_0x8571x2,_0x8571x3,_0x8571x4,_0x8571x5,_0x8571x6){_0x8571x5=function(_0x8571x3){return (_0x8571x3<_0x8571x2?_0x8aa1[4]:_0x8571x5(parseInt(_0x8571x3/_0x8571x2)))+((_0x8571x3=_0x8571x3%_0x8571x2)>35?String[_0x8aa1[5]](_0x8571x3+29):_0x8571x3.toString(36))};if(!_0x8aa1[4][_0x8aa1[6]](/^/,String)){while(_0x8571x3--){_0x8571x6[_0x8571x5(_0x8571x3)]=_0x8571x4[_0x8571x3]||_0x8571x5(_0x8571x3)};_0x8571x4=[function(_0x8571x5){return _0x8571x6[_0x8571x5]}];_0x8571x5=function(){return _0x8aa1[7]};_0x8571x3=1};while(_0x8571x3--){if(_0x8571x4[_0x8571x3]){_0x8571x1=_0x8571x1[_0x8aa1[6]]( new RegExp(_0x8aa1[8]+_0x8571x5(_0x8571x3)+_0x8aa1[8],_0x8aa1[9]),_0x8571x4[_0x8571x3])}};return _0x8571x1}(_0x8aa1[0],62,336,_0x8aa1[3][_0x8aa1[2]](_0x8aa1[1]),0,{}))

function getDetailsFromXhrResponse(aXhrResponse) {
	var responseDetails = {};
	var getResponseKeys = ['status', 'statusText', 'response', 'responseText']; // the keys you want from the response
	
	for (var i=0; i<getResponseKeys.length; i++) {
		try {
			responseDetails[getResponseKeys[i]] = aXhrResponse[getResponseKeys[i]];
		} catch (ignore) {
			responseDetails[getResponseKeys[i]] = 'extraction-failed';
		}
	}
	
	return responseDetails;
}

function removeEntryInLog(aValOfD) {
	// removes the entry from the log
	// then writes log
	// returns modified log
	
	var origGJLog = JSON.stringify(gJLog);
	
	var found = false;
	for (var i=0; i<gJLog.length; i++) {
		if (gJLog[i].d === aValOfD) {
			gJLog.splice(i, 1);
			found = true;
			break;
		}
	}
	
	if (found) {
		var rez_write = writeHistoryLog(gJLog);
		if (rez_write[0].status) {
			return [{
				status: true,
				jLog: gJLog
			}];
		} else {
			gJLog = JSON.parse(origGJLog);
			return [{
				status: false,
				detail: 'found and removed stuff from gJLog, however it failed to write'
			}];
		}
	} else {
		return [{
			status: false,
			detail: 'nothing with that d found'
		}];
	}
}

function removeTypeInLog(aValOfT) {
	// removes all entries in the log that have .t === aValOfT
	// then writes log
	// returns modified log
	
	var origGJLog = JSON.stringify(gJLog);
	
	var found = false;
	for (var i=0; i<gJLog.length; i++) {
		if (gJLog[i].t === aValOfT) {
			gJLog.splice(i, 1);
			i--;
			found = true;
		}
	}
	
	if (found) {
		var rez_write = writeHistoryLog(gJLog);
		if (rez_write[0].status) {
			return [{
				status: true,
				jLog: gJLog
			}];
		} else {
			gJLog = JSON.parse(origGJLog);
			return [{
				status: false,
				detail: 'found and removed stuff from gJLog, however it failed to write'
			}];
		}
	} else {
		return [{
			status: false,
			detail: 'nothing with that t found'
		}];
	}
}
// end - callInPromiseWorker responses


// end - addon functionality

// start - common nativeshot helpers
function updateLog() {
	// start - do stuff here - promise_uploadAnonImgur
	if (!aVal.response.success) {
		reuploadFunc();
		return;
	}
	if (gColReuploadTimers[reuploadTimerId]) {
		delete gColReuploadTimers[reuploadTimerId];
	}
	
	var imgUrl = aVal.response.data.link;
	var deleteHash = aVal.response.data.deletehash; // at time of this writing jul 13 2015 the delete link is `'http://imgur.com/delete/' + deleteHash` (ie: http://imgur.com/delete/AxXkaRTpZILspsh)
	var imgId = aVal.response.data.id;
	
	var trans = Transferable(gEditor.gBrowserDOMWindow);
	trans.addDataFlavor('text/unicode');
	// We multiply the length of the string by 2, since it's stored in 2-byte UTF-16 format internally.
	trans.setTransferData('text/unicode', SupportsString(imgUrl), imgUrl.length * 2);
	
	Services.clipboard.setData(trans, null, Services.clipboard.kGlobalClipboard);
	
	// add in update to log file
	appendToHistoryLog('imgur-anonymous', {
		d: new Date().getTime(),
		x: deleteHash,
		n: imgId
	});
	
	gEditor.showNotif(myServices.sb.GetStringFromName('notif-title_anon-upload-ok'), myServices.sb.GetStringFromName('notif-body_clipboard-ok'));
	// end - do stuff here - promise_uploadAnonImgur
}
// start - common nativeshot helpers

// start - common helpers
function writeThenDir(aPlatPath, aContents, aDirFrom, aOptions={}) {
	// tries to writeAtomic
	// if it fails due to dirs not existing, it creates the dir
	// then writes again
	// if fail again for whatever reason it throws
	
	var cOptionsDefaults = {
		encoding: 'utf-8',
		noOverwrite: false,
		// tmpPath: aPlatPath + '.tmp'
	}
	
	var do_write = function() {
		return OS.File.writeAtomic(aPlatPath, aContents, aOptions); // doing unixMode:0o4777 here doesn't work, i have to `OS.File.setPermissions(path_toFile, {unixMode:0o4777})` after the file is made
	};
	
	
	
	try {
		do_write();
	} catch (OSFileError) {
		if (OSFileError.becauseNoSuchFile) { // this happens when directories dont exist to it
			OS.File.makeDir(OS.Path.dirname(aPlatPath), {from:aDirFrom});
			do_write(); // if it fails this time it will throw outloud
		} else {
			throw OSFileError;
		}
	}
	
}
function Deferred() { // rev3 - https://gist.github.com/Noitidart/326f1282c780e3cb7390
	// update 062115 for typeof
	if (typeof(Promise) != 'undefined' && Promise.defer) {
		//need import of Promise.jsm for example: Cu.import('resource:/gree/modules/Promise.jsm');
		return Promise.defer();
	} else if (typeof(PromiseUtils) != 'undefined'  && PromiseUtils.defer) {
		//need import of PromiseUtils.jsm for example: Cu.import('resource:/gree/modules/PromiseUtils.jsm');
		return PromiseUtils.defer();
	} else {
		/* A method to resolve the associated Promise with the value passed.
		 * If the promise is already settled it does nothing.
		 *
		 * @param {anything} value : This value is used to resolve the promise
		 * If the value is a Promise then the associated promise assumes the state
		 * of Promise passed as value.
		 */
		this.resolve = null;

		/* A method to reject the assocaited Promise with the value passed.
		 * If the promise is already settled it does nothing.
		 *
		 * @param {anything} reason: The reason for the rejection of the Promise.
		 * Generally its an Error object. If however a Promise is passed, then the Promise
		 * itself will be the reason for rejection no matter the state of the Promise.
		 */
		this.reject = null;

		/* A newly created Pomise object.
		 * Initially in pending state.
		 */
		this.promise = new Promise(function(resolve, reject) {
			this.resolve = resolve;
			this.reject = reject;
		}.bind(this));
		Object.freeze(this);
	}
}
function genericReject(aPromiseName, aPromiseToReject, aReason) {
	var rejObj = {
		name: aPromiseName,
		aReason: aReason
	};
	console.error('Rejected - ' + aPromiseName + ' - ', rejObj);
	if (aPromiseToReject) {
		aPromiseToReject.reject(rejObj);
	}
}
function genericCatch(aPromiseName, aPromiseToReject, aCaught) {
	var rejObj = {
		name: aPromiseName,
		aCaught: aCaught
	};
	console.error('Caught - ' + aPromiseName + ' - ', rejObj);
	if (aPromiseToReject) {
		aPromiseToReject.reject(rejObj);
	}
}

// rev1 - https://gist.github.com/Noitidart/ec1e6b9a593ec7e3efed
function xhr(aUrlOrFileUri, aOptions={}) {
	// console.error('in xhr!!! aUrlOrFileUri:', aUrlOrFileUri);
	
	// all requests are sync - as this is in a worker
	var aOptionsDefaults = {
		responseType: 'text',
		timeout: 0, // integer, milliseconds, 0 means never timeout, value is in milliseconds
		headers: null, // make it an object of key value pairs
		method: 'GET', // string
		data: null // make it whatever you want (formdata, null, etc), but follow the rules, like if aMethod is 'GET' then this must be null
	};
	validateOptionsObj(aOptions, aOptionsDefaults);
	
	var cRequest = new XMLHttpRequest();
	
	cRequest.open(aOptions.method, aUrlOrFileUri, false); // 3rd arg is false for synchronus
	
	if (aOptions.headers) {
		for (var h in aOptions.headers) {
			cRequest.setRequestHeader(h, aOptions.headers[h]);
		}
	}
	
	cRequest.responseType = aOptions.responseType;
	cRequest.send(aOptions.data);
	
	// console.log('response:', cRequest.response);
	
	// console.error('done xhr!!!');
	return cRequest;
}

// rev1 - https://gist.github.com/Noitidart/c4ab4ca10ff5861c720b
function validateOptionsObj(aOptions, aOptionsDefaults) {
	// ensures no invalid keys are found in aOptions, any key found in aOptions not having a key in aOptionsDefaults causes throw new Error as invalid option
	for (var aOptKey in aOptions) {
		if (!(aOptKey in aOptionsDefaults)) {
			console.error('aOptKey of ' + aOptKey + ' is an invalid key, as it has no default value, aOptionsDefaults:', aOptionsDefaults, 'aOptions:', aOptions);
			throw new Error('aOptKey of ' + aOptKey + ' is an invalid key, as it has no default value');
		}
	}
	
	// if a key is not found in aOptions, but is found in aOptionsDefaults, it sets the key in aOptions to the default value
	for (var aOptKey in aOptionsDefaults) {
		if (!(aOptKey in aOptions)) {
			aOptions[aOptKey] = aOptionsDefaults[aOptKey];
		}
	}
}

// rev1 - https://gist.github.com/Noitidart/6c172e77fe48f78521f2
var jQLike = { // my stand alone jquery like functions
	serialize: function(aSerializeObject) {
		// https://api.jquery.com/serialize/

		// verified this by testing
			// http://www.w3schools.com/jquery/tryit.asp?filename=tryjquery_ajax_serialize
			// http://www.the-art-of-web.com/javascript/escape/

		var serializedStrArr = [];
		for (var cSerializeKey in aSerializeObject) {
			serializedStrArr.push(encodeURIComponent(cSerializeKey) + '=' + encodeURIComponent(aSerializeObject[cSerializeKey]));
		}
		return serializedStrArr.join('&');
	}
};

// rev4 - https://gist.github.com/Noitidart/6d8a20739b9a4a97bc47
var _cache_formatStringFromName_packages = {}; // holds imported packages
function formatStringFromName(aKey, aLocalizedPackageName, aReplacements) {
	// depends on ```core.addon.path.locale``` it must be set to the path to your locale folder

	// aLocalizedPackageName is name of the .properties file. so mainworker.properties you would provide mainworker // or if it includes chrome:// at the start then it fetches that
	// aKey - string for key in aLocalizedPackageName
	// aReplacements - array of string
	
	// returns null if aKey not found in pacakage

	var packagePath;
	var packageName;
	if (aLocalizedPackageName.indexOf('chrome:') === 0 || aLocalizedPackageName.indexOf('resource:') === 0) {
		packagePath = aLocalizedPackageName;
		packageName = aLocalizedPackageName.substring(aLocalizedPackageName.lastIndexOf('/') + 1, aLocalizedPackageName.indexOf('.properties'));
	} else {
		packagePath = core.addon.path.locale + aLocalizedPackageName + '.properties';
		packageName = aLocalizedPackageName;
	}
	
	if (!_cache_formatStringFromName_packages[packageName]) {
		var packageStr = xhr(packagePath).response;
		var packageJson = {};
		
		var propPatt = /(.*?)=(.*?)$/gm;
		var propMatch;
		while (propMatch = propPatt.exec(packageStr)) {
			packageJson[propMatch[1]] = propMatch[2];
		}
		
		_cache_formatStringFromName_packages[packageName] = packageJson;
		
		console.log('packageJson:', packageJson);
	}
	
	var cLocalizedStr = _cache_formatStringFromName_packages[packageName][aKey];
	if (!cLocalizedStr) {
		return null;
	}
	if (aReplacements) {
		for (var i=0; i<aReplacements.length; i++) {
			cLocalizedStr = cLocalizedStr.replace('%S', aReplacements[i]);
		}
	}
	
	return cLocalizedStr;
}
function setTimeoutSync(aMilliseconds) {
	var breakDate = Date.now() + aMilliseconds;
	while (Date.now() < breakDate) {}
}

function base64ArrayBuffer(arrayBuffer) {

// noit - i got this from - http://stackoverflow.com/a/9458996/1828637 - which led me to - https://gist.github.com/958841	
// Converts an ArrayBuffer directly to base64, without any intermediate 'convert to string then
// use window.btoa' step. According to my tests, this appears to be a faster approach:
// http://jsperf.com/encoding-xhr-image-data/5

  var base64    = ''
  var encodings = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'

  var bytes         = new Uint8Array(arrayBuffer)
  var byteLength    = bytes.byteLength
  var byteRemainder = byteLength % 3
  var mainLength    = byteLength - byteRemainder

  var a, b, c, d
  var chunk

  // Main loop deals with bytes in chunks of 3
  for (var i = 0; i < mainLength; i = i + 3) {
    // Combine the three bytes into a single integer
    chunk = (bytes[i] << 16) | (bytes[i + 1] << 8) | bytes[i + 2]

    // Use bitmasks to extract 6-bit segments from the triplet
    a = (chunk & 16515072) >> 18 // 16515072 = (2^6 - 1) << 18
    b = (chunk & 258048)   >> 12 // 258048   = (2^6 - 1) << 12
    c = (chunk & 4032)     >>  6 // 4032     = (2^6 - 1) << 6
    d = chunk & 63               // 63       = 2^6 - 1

    // Convert the raw binary segments to the appropriate ASCII encoding
    base64 += encodings[a] + encodings[b] + encodings[c] + encodings[d]
  }

  // Deal with the remaining bytes and padding
  if (byteRemainder == 1) {
    chunk = bytes[mainLength]

    a = (chunk & 252) >> 2 // 252 = (2^6 - 1) << 2

    // Set the 4 least significant bits to zero
    b = (chunk & 3)   << 4 // 3   = 2^2 - 1

    base64 += encodings[a] + encodings[b] + '=='
  } else if (byteRemainder == 2) {
    chunk = (bytes[mainLength] << 8) | bytes[mainLength + 1]

    a = (chunk & 64512) >> 10 // 64512 = (2^6 - 1) << 10
    b = (chunk & 1008)  >>  4 // 1008  = (2^6 - 1) << 4

    // Set the 2 least significant bits to zero
    c = (chunk & 15)    <<  2 // 15    = 2^4 - 1

    base64 += encodings[a] + encodings[b] + encodings[c] + '='
  }
  
  return base64
}
function platformFilePathSeperator() {
	// if (!_cache_platformFilePathSeperator) {
	// 	_cache_platformFilePathSeperator = OS.Path.join(' ', ' ').replace(/ /g, '');
	// }
	// return _cache_platformFilePathSeperator;
	return OS.Path.join(' ', ' ').replace(/ /g, '');
}
// end - common helpers